digraph CFG {
    node [shape=box];
    Node0 [label="func_0"];
    Node0 -> Node2 [label=""];
    Node2 [label="main"];
    Node2 -> Node3 [label=""];
    Node3 [label="int"];
    Node3 -> Node4 [label=""];
    Node4 [label="OP_ASSIGN"];
    PT100000 [label="op", shape=ellipse, style=dashed];
    Node4 -> PT100000 [label="ops"];
    PT100001 [label="OP_PLACE", shape=ellipse];
    PT100000 -> PT100001;
    PT100002 [label="aee", shape=ellipse];
    PT100001 -> PT100002;
    PT100003 [label="OP_ADD", shape=ellipse];
    PT100000 -> PT100003;
    PT100004 [label="OP_SUB", shape=ellipse];
    PT100003 -> PT100004;
    PT100005 [label="OP_ADD", shape=ellipse];
    PT100004 -> PT100005;
    PT100006 [label="OP_SUB", shape=ellipse];
    PT100005 -> PT100006;
    PT100007 [label="9", shape=ellipse];
    PT100006 -> PT100007;
    PT100008 [label="12", shape=ellipse];
    PT100006 -> PT100008;
    PT100009 [label="14", shape=ellipse];
    PT100005 -> PT100009;
    PT100010 [label="20", shape=ellipse];
    PT100004 -> PT100010;
    PT100011 [label="30", shape=ellipse];
    PT100003 -> PT100011;
    Node4 -> Node9 [label=""];
    Node9 [label="9"];
    Node9 -> Node10 [label=""];
    Node10 [label="12"];
    Node10 -> Node11 [label=""];
    Node11 [label="14"];
    Node11 -> Node12 [label=""];
    Node12 [label="20"];
    Node12 -> Node13 [label=""];
    Node13 [label="30"];
    Node13 -> Node14 [label=""];
    Node14 [label="while (((name==2)))"];
    Node14 -> Node16 [label="true"];
    Node16 [label="while_body"];
    Node16 -> Node17 [label=""];
    Node17 [label="if (((d==10)))"];
    Node17 -> Node19 [label="then"];
    Node19 [label="thenBlock"];
    Node19 -> Node20 [label=""];
    Node20 [label="u"];
    Node20 -> Node21 [label=""];
    Node21 [label="false"];
    Node21 -> Node18 [label=""];
    Node18 [label="endif"];
    Node18 -> Node14 [label=""];
    Node17 -> Node18 [label="else"];
    Node14 -> Node15 [label="false"];
    Node15 [label="loop_exit"];
    Node15 -> Node1 [label=""];
    Node1 [label="func_exit"];
}
